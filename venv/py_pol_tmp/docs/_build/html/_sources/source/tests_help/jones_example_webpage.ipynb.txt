{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "from py_pol.jones_vector import Jones_vector\n",
    "from py_pol.jones_matrix import Jones_matrix\n",
    "from py_pol.utils import degrees\n",
    "\n",
    "j0 = Jones_vector(\"j0\")\n",
    "j0.linear_light(angle=45*degrees)\n",
    "\n",
    "m0 = Jones_matrix(\"m0\")\n",
    "m0.diattenuator_linear( p1=0.75, p2=0.25, angle=45*degrees)\n",
    "\n",
    "m1 = Jones_matrix(\"m1\")\n",
    "m1.quarter_waveplate(angle=0 * degrees)\n",
    "\n",
    "j1=m1*m0*j0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "j0 = [+0.707; +0.707]' \n",
      "\n",
      "parameters of j0:\n",
      "    intensity        : 1.000 arb.u\n",
      "    alpha            : 45.000º\n",
      "    delay            : 0.000º\n",
      "    azimuth          : 45.000º\n",
      "    ellipticity angle: 0.000º\n",
      "    a, b             : 1.000  0.000\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(j0,'\\n')\n",
    "print(j0.parameters)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "m0 @45.00º = \n",
      "      [+0.500, +0.250]\n",
      "      [+0.250, +0.500] \n",
      "\n",
      "parameters of m0 @45.00º:\n",
      "    is_homogeneous: True\n",
      "    delay:          0.000ª\n",
      "    diattenuation:  0.800\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(m0,'\\n')\n",
    "print(m0.parameters)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "m1 = \n",
      "      [+1+0j, +0+0j]\n",
      "      [+0+0j, +0+1j] \n",
      "\n",
      "parameters of m1:\n",
      "    is_homogeneous: True\n",
      "    delay:          90.000ª\n",
      "    diattenuation:  0.000\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(m1,'\\n')\n",
    "print(m1.parameters)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "m1 * m0 @45.00º * j0 = [+0.530+0.000j; +0.000+0.530j]' \n",
      "\n",
      "parameters of m1 * m0 @45.00º * j0:\n",
      "    intensity        : 0.562 arb.u\n",
      "    alpha            : 45.000º\n",
      "    delay            : 90.000º\n",
      "    azimuth          : 8.618º\n",
      "    ellipticity angle: -45.000º\n",
      "    a, b             : 0.530  0.530\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print(j1,'\\n')\n",
    "print(j1.parameters)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
